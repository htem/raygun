{
    "framework": "torch",
    "system": "CycleGAN",
    "job_command": [
        "bsub",
        "-n 16",
        "-gpu \"num=1\"",
        "-q gpu_a100",
        "-P funke"
    ],
    "sources": {
        "A": { //TODO: Make list to allow for multiple sources
            "path": "/nrs/funke/rhoadesj/data/XNH/CBvGT/CBxs_lobV_overview_90nm_rec5iter_db9_l20p15_.n5",
            "real_name": "volumes/raw",
            "mask_name": "volumes/training_mask"
        },
        "B": {
            "path": "/nrs/funke/rhoadesj/data/XNH/CBvGT/CBxs_lobV_bottomp100um_30nm_rec_db9_.n5",
            "real_name": "volumes/raw",
            "mask_name": "volumes/volume_mask"
        }
    },
    "common_voxel_size": [
        30,
        30,
        30
    ], //voxel size to cast all data into
    "ndims": 2,
    "batch_size": 3,
    "num_workers": 16,
    "cache_size": 96,
    "scheduler": "LambdaLR",
    "scheduler_kwargs": {
        "epoch_count": 0,
        "n_epochs": 100000,
        "n_epochs_decay": 100000
    },
    "g_optim_type": "Adam",
    "g_optim_kwargs": {
        "betas": [
            0.5,
            0.999
        ],
        "lr": 0.00004,
        "weight_decay": 0
    },
    "d_optim_type": "Adam",
    "d_optim_kwargs": {
        "betas": [
            0.95,
            0.999
        ],
        "lr": 0.000004,
        "weight_decay": 0
    },
    "loss_kwargs": {
        "g_lambda_dict": {
            "A": {
                "l1_loss": {
                    "cycled": 3,
                    "identity": 0
                },
                "gan_loss": {
                    "fake": 1,
                    "cycled": 0
                }
            },
            "B": {
                "l1_loss": {
                    "cycled": 3,
                    "identity": 0
                },
                "gan_loss": {
                    "fake": 1,
                    "cycled": 0
                }
            }
        },
        "d_lambda_dict": {
            "A": {
                "real": 1,
                "fake": 1,
                "cycled": 0
            },
            "B": {
                "real": 1,
                "fake": 1,
                "cycled": 0
            }
        }
    },
    "gnet_type": "unet",
    "gnet_kwargs": {
        "input_nc": 1,
        "output_nc": 1,
        "padding_type": "valid",
        "ngf": 24,
        "constant_upsample": true, // unet specific
        "fmap_inc_factor": 4,
        "num_downs": 3
    },
    "pretrain_gnet": false,
    "dnet_type": "patchdiscriminator", //"resnet",
    "dnet_kwargs": {
        "input_nc": 1,
        "n_layers": 4,
        "ngf": 64
    },
    "spawn_subprocess": true,
    "side_length": 512, // requires odd number for valid resnet9 (which gives odd output)        
    "num_epochs": 200000,
    "log_every": 50,
    "save_every": 2000,
    "snapshot_every": 2000
}